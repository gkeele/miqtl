# Generated by roxygen2: do not edit by hand

S3method(collapse,genomecache)
S3method(extract,chr.max.statistics.from.genomewide)
S3method(extract,mediation.expression.qr)
S3method(extract,mediation.qr)
S3method(extract,qr)
S3method(extract,r2.interval)
export(DiploprobReader)
export(allele.plotter.region)
export(allele.plotter.whole)
export(calc.SIM.cache)
export(calc.dist.cache)
export(calc.kinship.from.genomecache.with.DOQTL)
export(ci.mean)
export(ci.median)
export(condition.out.locus.for.scan)
export(convert.DOQTL.to.HAPPY)
export(convert.additive.DOQTL.array.to.HAPPY)
export(convert.full.DOQTL.array.to.HAPPY)
export(convert.qtl2.to.HAPPY)
export(convert.qtl2.to.HAPPY.with.map)
export(generate.qr.permutation.index.matrix)
export(generate.sample.outcomes.matrix)
export(generate.simple.permutation.index.matrix)
export(generate.simple.sample.outcomes.matrix)
export(genome.plotter.chr)
export(genome.plotter.region)
export(genome.plotter.to.pdf)
export(genome.plotter.whole)
export(get.allele.effects.from.fixef)
export(get.allele.effects.from.ranef)
export(get.f.stat.p.val)
export(get.gev.padjust)
export(get.gev.thresholds)
export(get.p.value)
export(grab.locus.from.scan)
export(imputed.snp.scan.h2lmm)
export(instability.lm.scan)
export(lmmbygls)
export(lmmbygls.random)
export(lmmbygls.replicates)
export(mediation.scan.qr)
export(multi.imput.lmmbygls)
export(null.pvalue.ci.plot)
export(pairwise.cor.snp.scan)
export(plot_SIM)
export(plot_dist)
export(plot_locus.effect.from.scan)
export(prob.heatmap)
export(prob.heatmap.from.matrix)
export(prob.image)
export(rint)
export(run.positional.scans)
export(run.qr.permutation.threshold.mediation.scans)
export(run.qr.permutation.threshold.scans)
export(run.simple.permutation.threshold.scans)
export(run.threshold.scans)
export(scan.EM)
export(scan.h2lmm)
export(scan.qr)
export(single.chr.plotter.w.ci)
export(snp.genome.plotter.w.r2)
export(snp.genome.plotter.whole)
export(snp.null.par.bs.threshold.scan)
export(snp.par.perm.threshold.scan)
export(snp.perm.threshold.scan)
export(straineff.mapping.matrix)
exportClasses(DiploprobReader)
import(data.table)
