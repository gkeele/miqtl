% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genome_plotter.R
\name{genome.plotter.whole}
\alias{genome.plotter.whole}
\title{Plot one or more haplotype-based genome scans flexibly (whole genomes or subset of chromosomes)}
\usage{
genome.plotter.whole(scan.list, use.lod = FALSE, just.these.chr = NULL,
  scale = "Mb", main.colors = c("black", "cyan", "darkgreen"),
  distinguish.chr.type = c("color", "box"), distinguish.box.col = "gray88",
  distinguish.chr.col = c("gray60", "#008080", "greenyellow"),
  override.col = NULL, use.legend = TRUE, main = "",
  my.legend.cex = 0.6, my.legend.lwd = NULL, my.legend.lty = 1,
  my.legend.pos = "topright", my.legend.bty = "n", y.max.manual = NULL,
  my.y.line = 2, my.y.axis.cex = 1, my.y.lab.cex = 0.7,
  my.x.lab.cex = 0.7, my.x.labels = TRUE, no.title = FALSE,
  override.title = NULL, my.title.line = NA, title.cex = 1,
  hard.thresholds = NULL, thresholds.col = "red",
  thresholds.legend = NULL, thresholds.lwd = NULL,
  thresholds.legend.pos = "topleft", thresholds.lty = NULL,
  add.chr.to.label = FALSE, axis.cram = TRUE, include.x.axis.line = TRUE,
  mark.locus = NULL, mark.locus.col = "red", which.mark = 1,
  mark.manual = list(chr = NULL, pos = NULL), add.polygon = FALSE,
  which.polygon = 1, my.type = "l", my.pch = 20, my.cex = 0.5)
}
\arguments{
\item{scan.list}{A list of scan.h2lmm() objects that are to be plotted within the same genome scan plot.}

\item{use.lod}{DEFAULT: FALSE. Plots either the LOD score or the -log10 p-value.}

\item{just.these.chr}{DEFAULT: NULL. Specifies a subset of the chromosomes to be plotted. NULL results in all chromosomes being plotted.}

\item{scale}{DEFAULT: "Mb". Specifies the scale of genomic position to be plotted. Either Mb or cM are expected.}

\item{main.colors}{DEFAULT: "black". The color of the main association score to be plotted.}

\item{distinguish.chr.type}{DEFAULT: "color". The default specifies rectangular block backgrounds to distinguish adjacent chromosomes. The "color" option 
specifies alternating colors.}

\item{distinguish.box.col}{DEFAULT: "gray88". If distinguish.chr.type="box" is specified, this argument provides the color of the background rectangle.}

\item{distinguish.chr.col}{DEFAULT: "gray60". If distinguish.chr.type="color" is specified, this argument provides the alternating color. Multiple
colors should be specified if multiple scans are included in the plot.}

\item{use.legend}{DEFAULT: TRUE. Include a legend for the different associations. If TRUE, the labels are the names of the non.mi.scan.list object.}

\item{main}{DEFAULT: NULL. Adds a title above the model.}

\item{my.legend.cex}{DEFAULT: 0.6. Specifies the size of the text in the legend.}

\item{my.legend.lwd}{DEFAULT: NULL. If NULL, all lines have lwd=1.5. If not, option specifies the lwds.}

\item{my.legend.pos}{DEFAULT: "topright". Specifies where to put the legend, if specified in use.legend.}

\item{y.max.manual}{DEFAULT: NULL. Manually adds a max y-value. Allows multiple genome scans to easily be on the same scale.}

\item{no.title}{DEFAULT: FALSE. If TRUE, no title is printed.}

\item{override.title}{DEFAULT: NULL. If a string is specified, it is included on plot without any of the default automated title.}

\item{hard.thresholds}{DEFAULT: NULL. Specify one or more horizontal threshold lines.}

\item{thresholds.col}{DEFAULT: "red". Set the colors of the specified thresholds.}

\item{thresholds.legend}{DEFAULT: NULL. If non-NULL, string arguments used as labels in thresholds legend. If NULL,
no threshols legend is used.}

\item{add.chr.to.label}{DEFAULT: FALSE. If TRUE, adds "Chr" before every chromosome label. If FALSE, "Chr" is added as an axis
label under the y-axis.}

\item{axis.cram}{DEFAULT: TRUE. This makes the plot much more likely to include all chromosome labels. With small plots, this could
lead to overlapping labels.}

\item{include.x.axis.line}{DEFAULT: TRUE. IF TRUE, this option adds an x-axis line with ticks between chromosomes.}
}
\description{
This function takes the genome scan output from scan.h2lmm() and flexibly plots out the genome scan.
}
\examples{
genome.plotter.whole()
}
