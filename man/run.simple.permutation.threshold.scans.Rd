% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampling.processes.R
\name{run.simple.permutation.threshold.scans}
\alias{run.simple.permutation.threshold.scans}
\title{Runs threshold scans from a matrix of permutation indexes}
\usage{
run.simple.permutation.threshold.scans(sim.threshold.object,
  keep.full.scans = TRUE, scan.index = NULL, genomecache, formula, data,
  model = c("additive", "full"), use.multi.impute = TRUE, num.imp = 11,
  chr = "all", just.these.loci = NULL, scan.seed = 1, ...)
}
\arguments{
\item{sim.threshold.object}{An object created by generate.simple.permutation.index.matrix().}

\item{keep.full.scans}{DEFAULT: TRUE. Returns full genome scans for every outcome sample in the sim.threshold.object. Can be used
for visualization of the procedure, but greatly increases the size of the output object.}

\item{genomecache}{The path to the genome cache directory. The genome cache is a particularly structured
directory that stores the haplotype probabilities/dosages at each locus. It has an additive model
subdirectory and a full model subdirectory. Each contains subdirectories for each chromosome, which then
store .RData files for the probabilities/dosages of each locus.}

\item{data}{A data frame with outcome and potential covariates. Should also have IDs
that link to IDs in the genome cache, often the individual-level ID named "SUBJECT.NAME".}

\item{use.multi.impute}{DEFAULT: TRUE. This option specifies whether to use ROP or multiple imputations.}

\item{num.imp}{DEFAULT: 11. IF multiple imputations are used, this specifies the number of imputations to perform.}

\item{chr}{DEFAULT: "all". The chromosomes to conduct scans over.}

\item{just.these.loci}{DEFAULT: NULL. Specifies a reduced set of loci to fit. If loci is just one locus, the alternative model fit
will also be output as fit1.}

\item{scan.seed}{DEFAULT: 1. The sampling process is random, thus a seed must be set for samples to be consistent
across machines.}
}
\description{
This function takes an object produced from generate.simple.permutation.index.matrix, and 
runs genome scans based on the permutation indexes contained in them.
}
\examples{
run.threshold.scans()
}
